% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kiWisConnect.R
\name{get_kiwis_ts}
\alias{get_kiwis_ts}
\title{Retrieve KIWIS Time Series Data}
\usage{
get_kiwis_ts(
  hub,
  data_id,
  dateRange,
  format = NULL,
  return_fields = NULL,
  md_returnfields = NULL,
  truncation_fac = 50,
  datasource = 1,
  logPath = NULL
)
}
\arguments{
\item{hub}{Character. URL of the KIWIS hub to query.}

\item{data_id}{Character or numeric vector. IDs of the time series to retrieve.}

\item{dateRange}{Date vector of length 2. Start and end dates for the time series data.}

\item{format}{Character. Format of the returned data. Options are "zrxp" (default), "tabjson", or "dajson".}

\item{return_fields}{Character vector. Fields to return for each data point. Defaults to c("Timestamp", "Value").}

\item{md_returnfields}{Character vector. Metadata fields to return. Defaults to c("station_no", "ts_clientvalue6", "ts_clientvalue7").}

\item{truncation_fac}{Numeric. Maximum number of IDs per request block. Default is 50.}

\item{datasource}{Numeric or character. Identifier for the data source. Default is 1.}

\item{logPath}{Character. Optional path to log queries and responses.}
}
\value{
A character vector containing the raw response lines from the KIWIS hub for all requested time series. Each block is concatenated sequentially.
}
\description{
This function queries a KIWIS hub to retrieve time series data for specified time series IDs (`data_id`) over a given date range.
For large sets of IDs, the function automatically splits the request into blocks to avoid exceeding service limits.
It also allows selecting specific fields for both the time series values and metadata.
}
\examples{
\dontrun{
hub_url <- "http://kiwis.kisters.de/KiWIS/KiWIS"
ts_data <- get_kiwis_ts(hub = hub_url, datasource = 0,
                        data_id = c("3388042", "3448042"), 
                        dateRange = as.Date(c("2020-01-01", "2021-01-31")))
head(ts_data)
}

}
